Traceback (most recent call last):
  File "/home/allan/miniconda3/envs/reaktoro-jupyter-book/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/allan/miniconda3/envs/reaktoro-jupyter-book/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/allan/miniconda3/envs/reaktoro-jupyter-book/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/allan/miniconda3/envs/reaktoro-jupyter-book/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/home/allan/miniconda3/envs/reaktoro-jupyter-book/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/home/allan/miniconda3/envs/reaktoro-jupyter-book/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/home/allan/miniconda3/envs/reaktoro-jupyter-book/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/allan/miniconda3/envs/reaktoro-jupyter-book/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
solver = KineticsSolver(system)  # the chemical kinetics solver

table = Table()  # used to create table of data for later output and plotting

minute = 60
duration = 50 * minute
steps = 500

dt = duration/steps

# Initiate the time stepping for the kinetics modeling
for i in range(steps):
    result = solver.solve(state, dt)  # compute the chemical state of the system after it reacted for given time length

    assert result.succeeded(), f"Calculation did not succeed at time step #{i}."

    props = state.props()  # get the current thermodynamic and chemical properties of the system

    table.column("Time")         << i*dt / 60  # from seconds to minutes
    table.column("Calcite")      << props.speciesAmount("Calcite")  # in mol
    table.column("Magnesite")    << props.speciesAmount("Magnesite")  # in mol
    table.column("Dolomite")     << props.speciesAmount("Dolomite")  # in mol
    table.column("Ca+2")         << props.speciesAmount("Ca+2")  # in mol
    table.column("Mg+2")         << props.speciesAmount("Mg+2")  # in mol
    table.column("RateCalcite")  << props.reactionRates()[0]  # in mol
    table.column("RateDolomite") << props.reactionRates()[1]  # in mol
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAssertionError[0m                            Traceback (most recent call last)
[0;32m/tmp/ipykernel_8303/2247180427.py[0m in [0;36m<module>[0;34m[0m
[1;32m     13[0m     [0mresult[0m [0;34m=[0m [0msolver[0m[0;34m.[0m[0msolve[0m[0;34m([0m[0mstate[0m[0;34m,[0m [0mdt[0m[0;34m)[0m  [0;31m# compute the chemical state of the system after it reacted for given time length[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m [0;34m[0m[0m
[0;32m---> 15[0;31m     [0;32massert[0m [0mresult[0m[0;34m.[0m[0msucceeded[0m[0;34m([0m[0;34m)[0m[0;34m,[0m [0;34mf"Calculation did not succeed at time step #{i}."[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m [0;34m[0m[0m
[1;32m     17[0m     [0mprops[0m [0;34m=[0m [0mstate[0m[0;34m.[0m[0mprops[0m[0;34m([0m[0;34m)[0m  [0;31m# get the current thermodynamic and chemical properties of the system[0m[0;34m[0m[0;34m[0m[0m

[0;31mAssertionError[0m: Calculation did not succeed at time step #0.
AssertionError: Calculation did not succeed at time step #0.

